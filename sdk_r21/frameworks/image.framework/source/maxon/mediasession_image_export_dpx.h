#ifndef MEDIASESSION_IMAGE_EXPORT_DPX_H__
#define MEDIASESSION_IMAGE_EXPORT_DPX_H__


#include "maxon/mediasession_image_export.h"

#if defined(PRIVATE_MAXON_REGISTRATION_UNIT)
	// TODO: (Seb) don't know why
	#include "maxon/fileformat_handler.h"
#endif

//----------------------------------------------------------------------------------------
// BEGIN - auto generated code, do not edit
//----------------------------------------------------------------------------------------
namespace maxon
{
namespace MEDIASESSION
{
	namespace DPX
	{
		namespace EXPORT
		{
			MAXON_RESOURCE_DATABASE_SCOPE("net.maxon.mediasession.dpx.export");

			// supports MAXON::MEDIASESSION::EXPORT::DISABLESRGBCONVERSION

			MAXON_ATTRIBUTE(maxon::Id, BITDEPTH, "net.maxon.mediasession.dpx.export.bitdepth",
				RESOURCE_DEFINE(ENUM_DEFAULT, maxon::Id("Default"))
				RESOURCE_DEFINE(ENUM_10_BIT, maxon::Id("10 Bit"))
				RESOURCE_DEFINE(ENUM_12_BIT, maxon::Id("12 Bit")));

			/// Save in planar mode.
			MAXON_ATTRIBUTE(maxon::Bool, PLANAR, "net.maxon.mediasession.dpx.export.planar");
		}
	}
}
}
//----------------------------------------------------------------------------------------
// END - auto generated code, do not edit
//----------------------------------------------------------------------------------------

namespace maxon
{

// include autogenerated headerfile here
#include "mediasession_image_export_dpx1.hxx"

namespace ImageSaverClasses
{
	MAXON_DECLARATION(ImageSaverClasses::EntryType, Dpx, MEDIASESSION::DPX::EXPORT::GetId());	///< Dpx image saver.
}

// include autogenerated headerfile here
#include "mediasession_image_export_dpx2.hxx"


} // namespace maxon


#endif // MEDIASESSION_IMAGE_EXPORT_DPX_H__
