#if 1
class UrlFileCacheEntry;

struct UrlFileCacheEntryInterface::Hxx1
{
	class Reference;
	class NonConstRef;
	using ReferenceClass = UrlFileCacheEntry;
	/// Intermediate helper class for UrlFileCacheEntryInterface.
	template <typename S> class ConstFn DOXYGEN_SWITCH_REVERSED(, : public S)
	{
	public:
		ConstFn() = default;
		using PrivateBaseClass = S;
		using PrivateBaseClass::PrivateBaseClass;
		using PrivateBaseClass::PrivateLookupFn;
		static ConstFn PrivateLookupFn(UrlFileCacheEntryInterface**);
		operator const typename maxon::RefConversionTarget<S, typename S::Handler, maxon::StrongRefHandler, UrlFileCacheEntry, false>::type&() const { return reinterpret_cast<const UrlFileCacheEntry&>(this->GetBaseRef()); }
		operator const typename maxon::RefConversionTarget<S, typename S::Handler, maxon::StrongRefHandler, UrlFileCacheEntry, false>::type&() { return reinterpret_cast<const UrlFileCacheEntry&>(this->GetBaseRef()); }
		inline typename std::conditional<S::HAS_ERROR, maxon::Result<Url>, Url>::type GetSourceUrl() const;
		inline typename std::conditional<S::HAS_ERROR, maxon::Result<Url>, Url>::type GetCacheUrl() const;
	};
	template <typename ST> struct FnHelper : public std::conditional<
	false, void,
	ConstFn<typename ST::type>
	> { };
};
class UrlFileCacheEntryInterface::Hxx1::Reference :
#ifdef DOXYGEN
public ConstFnDoxy<UrlFileCacheEntry>
#else
public maxon::RefBase<Hxx1::FnHelper<maxon::RefBaseFn<maxon::DirectRef<const UrlFileCacheEntryInterface, maxon::StrongRefHandler, UrlFileCacheEntry>>>>
#endif
{
public:
	MAXON_DEFAULT_REFERENCE_CONSTRUCTORS(Reference, maxon::RefBase<Hxx1::FnHelper<maxon::RefBaseFn<maxon::DirectRef<const UrlFileCacheEntryInterface, maxon::StrongRefHandler, UrlFileCacheEntry>>>>);
	using NonConst = Hxx1::NonConstRef;
};

class UrlFileCacheEntryInterface::Hxx1::NonConstRef :
#ifdef DOXYGEN
public FnDoxy<NonConstRef>
#else
public maxon::RefBase<Hxx1::FnHelper<maxon::RefBaseFn<maxon::DirectRef<UrlFileCacheEntryInterface, maxon::StrongRefHandler, NonConstRef>>>>
#endif
{
public:
	MAXON_DEFAULT_REFERENCE_CONSTRUCTORS(NonConstRef, maxon::RefBase<Hxx1::FnHelper<maxon::RefBaseFn<maxon::DirectRef<UrlFileCacheEntryInterface, maxon::StrongRefHandler, NonConstRef>>>>);
};

/// UrlFileCacheEntry is the reference class of UrlFileCacheEntryInterface.
///
/// A cache entry generated by UrlFileCacheInterface::FindOrCreateUrl()
/// As long as you keep this reference the cache file will be stored in the temp folder.
/// As soon as the last reference the file will be kept for the maxCacheTime.
class UrlFileCacheEntry : public UrlFileCacheEntryInterface::Hxx1::Reference
{
public:
	MAXON_DEFAULT_REFERENCE_CONSTRUCTORS(UrlFileCacheEntry, typename UrlFileCacheEntryInterface::Hxx1::Reference);
};

#endif
