#if 1
#if 1
#endif
#if defined(MAXON_TARGET_MACOS)
#elif defined MAXON_TARGET_LINUX || defined MAXON_TARGET_ANDROID
#elif defined(MAXON_TARGET_IOS)
#if defined(MAXON_TARGET_CPU_INTEL)
#elif defined MAXON_TARGET_64BIT
#else
#endif
#elif !defined(MAXON_TARGET_WINDOWS)
#endif
namespace maxon
{
#ifndef MAXON_REGISTRATION_EXCLUDE_INTERFACES
	PRIVATE_MAXON_DATATYPE_REGISTER_ENUM(TARGETAUDIENCE, "net.maxon.datatype.enum.targetaudience", SIZEOF(TARGETAUDIENCE), true, "DEBUGGER\0DEVELOPERS\0USERS\0ALL\0", const maxon::UInt64 values[] = {(maxon::UInt64) TARGETAUDIENCE::DEBUGGER, (maxon::UInt64) TARGETAUDIENCE::DEVELOPERS, (maxon::UInt64) TARGETAUDIENCE::USERS, (maxon::UInt64) TARGETAUDIENCE::ALL})
#endif
#ifndef MAXON_REGISTRATION_EXCLUDE_INTERFACES
	PRIVATE_MAXON_DATATYPE_REGISTER_ENUM(WRITEMETA, "net.maxon.datatype.enum.writemeta", SIZEOF(WRITEMETA), true, "DEFAULT\0WARNING\0CRITICAL\0NONEWLINE\0UI_SYNC_DRAW\0", const maxon::UInt64 values[] = {(maxon::UInt64) WRITEMETA::DEFAULT, (maxon::UInt64) WRITEMETA::WARNING, (maxon::UInt64) WRITEMETA::CRITICAL, (maxon::UInt64) WRITEMETA::NONEWLINE, (maxon::UInt64) WRITEMETA::UI_SYNC_DRAW})
#endif
#ifndef MAXON_REGISTRATION_EXCLUDE_INTERFACES
	PRIVATE_MAXON_DATATYPE_REGISTER_ENUM(OUTPUT, "net.maxon.datatype.enum.output", SIZEOF(OUTPUT), true, "DIAGNOSTIC\0WARNING\0CRITICAL\0NOLINEBREAK\0HEADER\0", const maxon::UInt64 values[] = {(maxon::UInt64) OUTPUT::DIAGNOSTIC, (maxon::UInt64) OUTPUT::WARNING, (maxon::UInt64) OUTPUT::CRITICAL, (maxon::UInt64) OUTPUT::NOLINEBREAK, (maxon::UInt64) OUTPUT::HEADER})
#endif
#ifdef MAXON_TARGET_DEBUG
#else
#endif
#ifdef MAXON_TARGET_DEBUG
#else
#endif
#ifdef MAXON_TARGET_MACOS
#endif
#if defined MAXON_TARGET_DEBUG
#else
#endif
}
#endif
